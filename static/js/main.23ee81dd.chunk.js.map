{"version":3,"sources":["types/Status.ts","api.ts","TodosContext.tsx","utils.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodosContext","React","createContext","TodosProvider","children","useState","allTodos","setAllTodos","areTodosLoading","setAreTodosLoading","todoOnView","setTodoOnView","All","status","setStatus","query","setQuery","useEffect","finally","visibleTodos","todos","normalizedQuery","trim","toLowerCase","filter","todo","title","includes","Active","completed","Completed","getVisibleTodos","value","useMemo","Provider","TodoItem","useContext","className","classNames","id","type","onClick","TodoList","map","TodoFilter","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","isUserLoading","setIsUserLoading","todoWithUser","setTodoWithUser","userId","user","href","email","name","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23ee81dd.chunk.js","sourcesContent":["export enum Status {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState, useMemo } from 'react';\nimport { Context, Status, Todo } from './types';\nimport { getTodos } from './api';\nimport { getVisibleTodos } from './utils';\n\nexport const TodosContext = React.createContext({} as Context);\n\ntype Props = {\n  children: React.ReactNode,\n};\n\nexport const TodosProvider: React.FC<Props> = ({ children }) => {\n  const [allTodos, setAllTodos] = useState<Todo[]>([]);\n  const [areTodosLoading, setAreTodosLoading] = useState(false);\n  const [todoOnView, setTodoOnView] = useState<Todo | null>(null);\n  const [status, setStatus] = useState(Status.All);\n  const [query, setQuery] = useState<string>('');\n\n  useEffect(() => {\n    setAreTodosLoading(true);\n    getTodos()\n      .then(setAllTodos)\n      .finally(() => {\n        setAreTodosLoading(false);\n      });\n  }, []);\n\n  const visibleTodos = getVisibleTodos(allTodos, { query, status });\n\n  const value: Context = useMemo(() => ({\n    areTodosLoading,\n    visibleTodos,\n    query,\n    setQuery,\n    status,\n    setStatus,\n    todoOnView,\n    setTodoOnView,\n  }), [areTodosLoading, allTodos, todoOnView, status, query]);\n\n  return (\n    <TodosContext.Provider value={value}>\n      {children}\n    </TodosContext.Provider>\n  );\n};\n","import { Todo, Status } from './types';\n\ntype GetTodos = (\n  todos: Todo[],\n  { query, status }: { query: string, status: Status }\n) => Todo[];\n\nexport const getVisibleTodos: GetTodos = (todos, { query, status }) => {\n  let allTodos = [...todos];\n\n  if (query) {\n    const normalizedQuery = query.trim().toLowerCase();\n\n    allTodos = allTodos.filter(\n      todo => todo.title.toLowerCase().includes(normalizedQuery),\n    );\n  }\n\n  return allTodos.filter(todo => {\n    switch (status) {\n      case Status.Active:\n        return !todo.completed;\n\n      case Status.Completed:\n        return todo.completed;\n\n      default:\n        return todo;\n    }\n  });\n};\n","import React, { useContext } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { TodosContext } from '../../TodosContext';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const { todoOnView, setTodoOnView } = useContext(TodosContext);\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={classNames({\n        'has-background-info-light': todo.id === todoOnView?.id,\n      })}\n    >\n      <td className=\"is-vcentered\">{todo.id}</td>\n\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={classNames({\n            'has-text-danger': !todo.completed,\n            'has-text-success': todo.completed,\n          })}\n        >\n          {todo.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => setTodoOnView(todo)}\n        >\n          <span className=\"icon\">\n            <i\n              className={classNames('far', {\n                'fa-eye': todo.id !== todoOnView?.id,\n                'fa-eye-slash': todo.id === todoOnView?.id,\n              })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React, { useContext } from 'react';\nimport { TodoItem } from '../TodoItem';\nimport { TodosContext } from '../../TodosContext';\n\nexport const TodoList: React.FC = () => {\n  const { visibleTodos } = useContext(TodosContext);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {visibleTodos.map(todo => (\n          <TodoItem key={todo.id} todo={todo} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useContext } from 'react';\nimport { TodosContext } from '../../TodosContext';\nimport { Status } from '../../types';\n\nexport const TodoFilter: React.FC = () => {\n  const {\n    query,\n    setQuery,\n    status,\n    setStatus,\n  } = useContext(TodosContext);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={event => setStatus(event.target.value as Status)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useContext, useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { TodosContext } from '../../TodosContext';\nimport { TodoWithUser } from '../../types/TodoWithUser';\nimport { getUser } from '../../api';\n\nexport const TodoModal: React.FC = () => {\n  const [isUserLoading, setIsUserLoading] = useState(false);\n  const [todoWithUser, setTodoWithUser] = useState<TodoWithUser | null>(null);\n  const { todoOnView, setTodoOnView } = useContext(TodosContext);\n\n  useEffect(() => {\n    if (todoOnView) {\n      setIsUserLoading(true);\n      getUser(todoOnView.userId)\n        .then(user => setTodoWithUser({ ...todoOnView, user }))\n        .finally(() => {\n          setIsUserLoading(false);\n        });\n    }\n  }, []);\n\n  const reset = () => {\n    setTodoOnView(null);\n    setTodoWithUser(null);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isUserLoading && <Loader />}\n\n      {todoWithUser && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todoWithUser.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={reset}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todoWithUser.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong\n                className={classNames({\n                  'has-text-danger': !todoWithUser.completed,\n                  'has-text-success': todoWithUser.completed,\n                })}\n              >\n                {todoWithUser.completed\n                  ? 'Done'\n                  : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${todoWithUser.user.email}`}>\n                {todoWithUser?.user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { TodosContext } from './TodosContext';\n\nexport const App: React.FC = () => {\n  const { areTodosLoading, todoOnView } = useContext(TodosContext);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {areTodosLoading && <Loader />}\n\n              <TodoList />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todoOnView && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { TodosProvider } from './TodosContext';\n\nReactDOM.render(\n  <TodosProvider>\n    <App />\n  </TodosProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}